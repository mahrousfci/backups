{
  "id": 2,
  "name": "Termination Weekly Report Fix Attempt",
  "active": false,
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "operation": "toFile",
        "options": {}
      },
      "name": "Spreadsheet File",
      "type": "n8n-nodes-base.spreadsheetFile",
      "typeVersion": 1,
      "position": [
        1280,
        60
      ]
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyWeek"
            }
          ]
        }
      },
      "name": "Cron",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        180,
        460
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\nccs.customer_contract_subscriptionid as SubscriptionId,\nc.customerid,\npc.product_catalogue_name,\nccs.created_at ,\nccs.contract_period_end,\nccs.contract_period_start,\nccs.bill_from ,\nccstatus.status status,\nCASE\nWHEN provisioning_status = 0 THEN \"NOT SENT\"\nWHEN provisioning_status = 1 THEN \"ACTIVE\"\nWHEN provisioning_status = 2 THEN \"TERMINATED\"\nWHEN provisioning_status = 3 THEN \"FAILED\"\nWHEN provisioning_status = 4 THEN \"UNDER ACTIVATION\"\nWHEN provisioning_status = 5 THEN \"UNDER TERMINATTION\"\nWHEN provisioning_status = 6 THEN \"PARTLY FAILED\"\nWHEN provisioning_status = 7 THEN \"CREATED\"\nWHEN provisioning_status = 8 THEN \"WAITING 4 DELIVERY\"\nWHEN provisioning_status = 9 THEN \"WAITING ON HUMAN TASK\"\nWHEN provisioning_status = 99 THEN \"MANUAL\"\nELSE \"UNKNOWN\"\nEND provisioning_status\nFROM customer_contract_subscription ccs\nJOIN customer_order co on co.customer_orderid = ccs.customer_orderid\nJOIN customer_contract cc on cc.customer_contractid = ccs.customer_contractid\nJOIN customer_contract_status ccstatus on ccstatus.customer_contract_statusid = ccs.contract_status\nJOIN product_catalogue pc on pc.product_catalogueid = ccs.product_catalogueid\nJOIN customer_network cn on cc.customer_networkid = cn.customer_networkid\nJOIN customer c on c.crmid = cc.crmid\nWHERE ccs.contract_status in (1)\nAND ccs.provisioning_status <> 5\nAND ccs.contract_period_end != '0000-00-00'\nAND cn.name != 'Productiontest'\nAND ccs.contract_period_end < CURDATE()\norder BY ccs.created_at\n;"
      },
      "name": "PendingTerminatedOrders",
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 1,
      "position": [
        400,
        460
      ],
      "credentials": {
        "mySql": {
          "id": null,
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "fromEmail": "mahmoud.distplan@gmail.com",
        "toEmail": "mahmoud.mahrous@capgemini.com",
        "subject": "Pending Termination Orders",
        "text": "Hello,\n\nPlease find the attachments for the pending termination report.\n\n* This email is generated by an automated weekly report workflow.\n\nThanks,\nQnut Bot\n",
        "attachments": "data",
        "options": {}
      },
      "name": "Send Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        1480,
        60
      ],
      "credentials": {
        "smtp": {
          "id": "1",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "mode": "passThrough"
      },
      "name": "Merge6",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 1,
      "position": [
        1200,
        400
      ]
    },
    {
      "parameters": {
        "command": "=C:\\Users\\ies325\\Documents\\bin\\tctl.exe --address 10.201.4.24:7233 workflow showid {{$json[\"searchWorkflowId\"]}}"
      },
      "name": "tctlSearch",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        1060,
        540
      ],
      "alwaysOutputData": false,
      "continueOnFail": true
    },
    {
      "parameters": {
        "functionCode": "item.searchWorkflowId = `subscription::${item[\"SubscriptionId\"]}`;\n\nreturn item;"
      },
      "name": "FunctionItem2",
      "type": "n8n-nodes-base.functionItem",
      "typeVersion": 1,
      "position": [
        900,
        460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{!!$node[\"tctlSearch\"].json[\"error\"]}}",
              "value2": true
            }
          ],
          "number": []
        }
      },
      "name": "IFNoSubscriptionWF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1340,
        540
      ],
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "name": "SplitInBatches",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 1,
      "position": [
        640,
        460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{$node[\"SplitInBatches\"].context[\"noItemsLeft\"]}}",
              "value2": true
            }
          ]
        }
      },
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1300,
        740
      ]
    },
    {
      "parameters": {},
      "name": "NoOp2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1580,
        720
      ]
    },
    {
      "parameters": {
        "functionCode": "function sleep(milliseconds) {\n  return new Promise(\n    resolve => setTimeout(resolve, milliseconds)\n  );\n}\n\nawait sleep(500);\n\n// Output data\nreturn items;"
      },
      "name": "Sleep 3 secs",
      "type": "n8n-nodes-base.function",
      "position": [
        1100,
        740
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "functionCode": "function sleep(milliseconds) {\n  return new Promise(\n    resolve => setTimeout(resolve, milliseconds)\n  );\n}\n\nawait sleep(500);\n\n// Output data\nreturn items;"
      },
      "name": "Sleep 3 secs1",
      "type": "n8n-nodes-base.function",
      "position": [
        1680,
        480
      ],
      "typeVersion": 1
    }
  ],
  "connections": {
    "Spreadsheet File": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cron": {
      "main": [
        [
          {
            "node": "PendingTerminatedOrders",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PendingTerminatedOrders": {
      "main": [
        [
          {
            "node": "SplitInBatches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge6": {
      "main": [
        [
          {
            "node": "IFNoSubscriptionWF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "tctlSearch": {
      "main": [
        [
          {
            "node": "Merge6",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "FunctionItem2": {
      "main": [
        [
          {
            "node": "Merge6",
            "type": "main",
            "index": 0
          },
          {
            "node": "tctlSearch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IFNoSubscriptionWF": {
      "main": [
        [
          {
            "node": "Sleep 3 secs",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Sleep 3 secs1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SplitInBatches": {
      "main": [
        [
          {
            "node": "FunctionItem2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "NoOp2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SplitInBatches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sleep 3 secs": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sleep 3 secs1": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2022-04-20T20:17:52.766Z",
  "updatedAt": "2022-04-20T20:17:52.766Z",
  "settings": {},
  "staticData": null
}